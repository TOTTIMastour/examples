<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www2.osgi.org/www/obr2html.xsl'?>

<repository lastmodified='20120214042937.954' name='Aries'>
  <resource id='derby/10.5.3000000.802917' presentationname='Apache Derby 10.5' symbolicname='derby' uri='derby-10.5.3.0_1.jar' version='10.5.3000000.802917'>
    <size>
      2512189
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='1'/>
      <p n='presentationname' v='Apache Derby 10.5'/>
      <p n='symbolicname' v='derby'/>
      <p n='version' t='version' v='10.5.3000000.802917'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.authentication'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.database'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.jdbc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.vti'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
  </resource>
  <resource id='org.apache.aries.application.api/0.3.0' presentationname='Apache Aries Application API' symbolicname='org.apache.aries.application.api' uri='org.apache.aries.application.api-0.3.jar' version='0.3.0'>
    <description>
      Application API.
    </description>
    <size>
      46766
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application API'/>
      <p n='symbolicname' v='org.apache.aries.application.api'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.application.filesystem,org.apache.aries.application.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.filesystem'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management'/>
      <p n='uses' v='org.apache.aries.application,org.osgi.framework,org.apache.aries.application.filesystem'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management.spi.runtime'/>
      <p n='uses' v='org.apache.aries.application,org.osgi.framework,org.apache.aries.application.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management.spi.convert'/>
      <p n='uses' v='org.apache.aries.application.management,org.apache.aries.application.filesystem'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management.spi.resolve'/>
      <p n='uses' v='org.apache.aries.application,org.apache.aries.application.modelling,org.apache.aries.application.management.spi.repository,org.osgi.framework,org.apache.aries.application.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management.spi.repository'/>
      <p n='uses' v='org.apache.aries.application,org.osgi.framework,org.apache.aries.application.management.spi.framework,org.apache.aries.application.management,org.apache.aries.application.modelling'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management.spi.update'/>
      <p n='uses' v='org.apache.aries.application,org.apache.aries.application.management.spi.repository,org.osgi.framework,org.apache.aries.application.management.spi.framework,org.apache.aries.application.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.management.spi.framework'/>
      <p n='uses' v='org.apache.aries.application.management.spi.repository,org.osgi.framework,org.apache.aries.application.management,org.apache.aries.application'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.modelling'/>
      <p n='uses' v='org.apache.aries.application.management,org.apache.aries.application.filesystem,org.apache.aries.application'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.modelling.utils'/>
      <p n='uses' v='org.apache.aries.application,org.apache.aries.application.modelling'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.default.local.platform/0.3.0' presentationname='Apache Aries Application Default local platform' symbolicname='org.apache.aries.application.default.local.platform' uri='org.apache.aries.application.default.local.platform-0.3.jar' version='0.3.0'>
    <description>
      Implementation of the default local Platform Repository
    </description>
    <size>
      10428
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.runtime.LocalPlatform'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Default local platform'/>
      <p n='symbolicname' v='org.apache.aries.application.default.local.platform'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.runtime)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.runtime
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.deployment.management/0.3.0' presentationname='Apache Aries Application Deployment Management' symbolicname='org.apache.aries.application.deployment.management' uri='org.apache.aries.application.deployment.management-0.3.jar' version='0.3.0'>
    <description>
      Deployment Manager for resolving an Aries Applications.
    </description>
    <size>
      24203
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.resolve.DeploymentManifestManager'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Deployment Management'/>
      <p n='symbolicname' v='org.apache.aries.application.deployment.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.resolve.AriesApplicationResolver)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.resolve.AriesApplicationResolver
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.resolve.PostResolveTransformer)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.resolve.PostResolveTransformer
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.runtime.LocalPlatform)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.runtime.LocalPlatform
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.modelling.ModelledResourceManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.modelling.ModelledResourceManager
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.modelling.ModellingManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.modelling.ModellingManager
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.modelling.utils.ModellingHelper)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.modelling.utils.ModellingHelper
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.filesystem ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.resolve)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.resolve
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.runtime)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.runtime
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling.utils)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling.utils
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.filesystem
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.manifest)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.manifest
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.install/0.3.0' presentationname='Apache Aries Application Installer' symbolicname='org.apache.aries.application.install' uri='org.apache.aries.application.install-0.3.jar' version='0.3.0'>
    <description>
      A very basic application installer
    </description>
    <size>
      11569
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.felix.fileinstall.ArtifactInstaller'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Installer'/>
      <p n='symbolicname' v='org.apache.aries.application.install'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.install'/>
      <p n='uses' v='org.apache.felix.fileinstall,org.apache.aries.application.filesystem,org.apache.aries.application,org.apache.aries.application.utils.filesystem,org.osgi.framework,org.slf4j,org.apache.aries.application.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.application.management.AriesApplicationManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.AriesApplicationManager
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.filesystem ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.filesystem
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.fileinstall ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.management/0.3.0' presentationname='Apache Aries Application Management' symbolicname='org.apache.aries.application.management' uri='org.apache.aries.application.management-0.3.jar' version='0.3.0'>
    <description>
      Implementation of the application management API
    </description>
    <size>
      24343
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.AriesApplicationManager'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Management'/>
      <p n='symbolicname' v='org.apache.aries.application.management'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.application.ApplicationMetadataFactory)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.ApplicationMetadataFactory
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.DeploymentMetadataFactory)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.DeploymentMetadataFactory
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.convert.BundleConverter)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.convert.BundleConverter
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.resolve.DeploymentManifestManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.resolve.DeploymentManifestManager
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.runtime.AriesApplicationContextManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.runtime.AriesApplicationContextManager
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.runtime.LocalPlatform)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.runtime.LocalPlatform
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.filesystem ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.convert)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.convert
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.framework)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.framework
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.repository)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.repository
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.resolve)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.resolve
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.runtime)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.runtime
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.filesystem
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.management
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.manifest)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.manifest
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.modeller/0.3.0' presentationname='Apache Aries Application Modelling' symbolicname='org.apache.aries.application.modeller' uri='org.apache.aries.application.modeller-0.3.jar' version='0.3.0'>
    <description>
      Modelling utilities for working with Aries Applications.
    </description>
    <size>
      60989
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.modelling.ModelledResourceManager'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.modelling.ModellingManager'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.modelling.ParserProxy'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.modelling.utils.ModellingHelper'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Modelling'/>
      <p n='symbolicname' v='org.apache.aries.application.modeller'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.blueprint.ParserService)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.blueprint.ParserService
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.filesystem ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling.utils)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling.utils
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.manifest)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.manifest
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.noop.platform.repo/0.3.0' presentationname='Apache Aries Application Platform Repository' symbolicname='org.apache.aries.application.noop.platform.repo' uri='org.apache.aries.application.noop.platform.repo-0.3.jar' version='0.3.0'>
    <description>
      Implementation of the no-op Platform Repository
    </description>
    <size>
      10436
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.repository.PlatformRepository'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Platform Repository'/>
      <p n='symbolicname' v='org.apache.aries.application.noop.platform.repo'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.repository)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.repository
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.noop.postresolve.process/0.3.0' presentationname='Apache Aries Application postresolve process' symbolicname='org.apache.aries.application.noop.postresolve.process' uri='org.apache.aries.application.noop.postresolve.process-0.3.jar' version='0.3.0'>
    <description>
      Implementation of the no-op Postresolve process
    </description>
    <size>
      10645
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.resolve.PostResolveTransformer'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application postresolve process'/>
      <p n='symbolicname' v='org.apache.aries.application.noop.postresolve.process'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.resolve)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.resolve
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.resolver.obr/0.3.0' presentationname='Apache Aries Application OBR Resolver' symbolicname='org.apache.aries.application.resolver.obr' uri='org.apache.aries.application.resolver.obr-0.3.jar' version='0.3.0'>
    <description>
      Implementation of the AriesApplicationResolver using OBR
    </description>
    <size>
      48652
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.repository.RepositoryGenerator'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.resolve.AriesApplicationResolver'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application OBR Resolver'/>
      <p n='symbolicname' v='org.apache.aries.application.resolver.obr'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.resolver.obr.ext'/>
      <p n='uses' v='org.apache.felix.bundlerepository,org.apache.aries.application.modelling,org.osgi.framework,org.slf4j'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.application.management.spi.repository.PlatformRepository)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.management.spi.repository.PlatformRepository
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.modelling.ModellingManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.modelling.ModellingManager
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.modelling.utils.ModellingHelper)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.modelling.utils.ModellingHelper
    </require>
    <require extend='false' filter='(service=org.apache.aries.application.resolver.obr.ext.BundleResourceTransformer)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.application.resolver.obr.ext.BundleResourceTransformer
    </require>
    <require extend='false' filter='(service=org.apache.felix.bundlerepository.RepositoryAdmin)' multiple='true' name='service' optional='false'>
      Import Service org.apache.felix.bundlerepository.RepositoryAdmin
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.repository)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.repository
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.resolve)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.resolve
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.modelling.utils)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.modelling.utils
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.filesystem)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.filesystem
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.utils.manifest)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.utils.manifest
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.bundlerepository ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.application.runtime/0.3.0' presentationname='Apache Aries Application Runtime' symbolicname='org.apache.aries.application.runtime' uri='org.apache.aries.application.runtime-0.3.jar' version='0.3.0'>
    <description>
      A very basic runtime implementation
    </description>
    <size>
      16001
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.management.spi.runtime.AriesApplicationContextManager'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Runtime'/>
      <p n='symbolicname' v='org.apache.aries.application.runtime'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.resolve)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.resolve
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management.spi.runtime)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management.spi.runtime
       ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.application.utils/0.3.0' presentationname='Apache Aries Application Utils' symbolicname='org.apache.aries.application.utils' uri='org.apache.aries.application.utils-0.3.jar' version='0.3.0'>
    <description>
      Utilities for working with Aries Applications.
    </description>
    <size>
      72303
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.ApplicationMetadataFactory'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.application.DeploymentMetadataFactory'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Application Utils'/>
      <p n='symbolicname' v='org.apache.aries.application.utils'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.utils'/>
      <p n='uses' v='org.slf4j,org.apache.aries.application,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.utils.filesystem'/>
      <p n='uses' v='org.apache.aries.application.filesystem,org.slf4j'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.utils.manifest'/>
      <p n='uses' v='org.apache.aries.application.filesystem,org.apache.aries.application.utils.filesystem,org.osgi.framework,org.slf4j,org.apache.aries.application,org.apache.aries.util'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.utils.management'/>
      <p n='uses' v='org.apache.aries.application,org.osgi.framework,org.apache.aries.application.management,org.apache.aries.application.utils.manifest'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.application.utils.service'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.filesystem)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.filesystem ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.application.management)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.application.management ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint/0.3.0' presentationname='Apache Aries Blueprint Bundle' symbolicname='org.apache.aries.blueprint' uri='org.apache.aries.blueprint-0.3.jar' version='0.3.0'>
    <description>
      This bundle contains the standalone implementation along with
       the API.        It's composed of the blueprint-api, blueprint-core
       and blueprint-cm modules.
    </description>
    <size>
      370426
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.ParserService'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Bundle'/>
      <p n='symbolicname' v='org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.container,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.compendium.cm'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.container'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.osgi.service.blueprint.container,org.apache.aries.blueprint.mutable,org.slf4j,org.w3c.dom'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.compendium.cm'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.cm,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.slf4j,org.apache.aries.blueprint.container,org.apache.aries.blueprint.ext,org.w3c.dom,org.apache.aries.blueprint.mutable'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.namespace'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.reflect,org.apache.aries.blueprint.container,org.osgi.framework,javax.xml.validation,org.slf4j,org.xml.sax,javax.xml.transform,org.osgi.util.tracker,javax.xml.transform.stream'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.blueprint,org.apache.aries.blueprint.container,org.apache.aries.blueprint.di,org.osgi.service.blueprint.container'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.nls'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.container'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.slf4j,org.apache.aries.blueprint.di,org.apache.aries.proxy,org.apache.aries.blueprint.proxy,org.apache.aries.blueprint.namespace,org.apache.aries.blueprint.reflect,javax.xml.validation,org.osgi.util.tracker,org.osgi.service.event,org.apache.aries.util,org.apache.aries.util.tracker,org.apache.aries.blueprint.annotation.service,org.apache.aries.quiesce.manager,org.apache.aries.quiesce.participant,org.xml.sax,javax.xml.parsers,javax.xml.transform.dom,org.w3c.dom,javax.xml.transform,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.di,org.osgi.framework,org.osgi.service.blueprint.container,org.w3c.dom'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.di'/>
      <p n='uses' v='org.apache.aries.blueprint.container,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.apache.aries.blueprint.ext,org.apache.aries.blueprint,org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.reflect'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.proxy'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.proxy,org.slf4j'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' multiple='true' name='service' optional='false'>
      Import Service org.osgi.service.cm.ConfigurationAdmin
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.blueprint.annotation.service
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.adaptor
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.internal.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.internal.loader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.internal.loader
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.apache.aries.jndi/0.3.0' presentationname='Apache Aries JNDI Bundle' symbolicname='org.apache.aries.jndi' uri='org.apache.aries.jndi-0.3.jar' version='0.3.0'>
    <description>
      This bundle contains the core JNDI along with the OSGi url
       handler.        It's composed of the jndi-api, jndi-core and
       jndi-url modules.
    </description>
    <size>
      102538
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries JNDI Bundle'/>
      <p n='symbolicname' v='org.apache.aries.jndi'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.jndi'/>
      <p n='uses' v='javax.naming.directory,javax.naming'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jndi.urls'/>
      <p n='uses' v='javax.naming,javax.naming.spi'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jndi.spi'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.ldap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.ldap
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jndi.spi)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jndi.spi ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jndi.urls)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jndi.urls ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.jndi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.jndi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.api/0.3.0' presentationname='Aries JPA Container API' symbolicname='org.apache.aries.jpa.api' uri='org.apache.aries.jpa.api-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      13271
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container API'/>
      <p n='symbolicname' v='org.apache.aries.jpa.api'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.parsing'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container'/>
      <p n='uses' v='javax.persistence.spi,org.apache.aries.jpa.container.parsing,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.context'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.blueprint.aries/0.3.0' presentationname='Aries JPA Container blueprint integration for Aries blueprint' symbolicname='org.apache.aries.jpa.blueprint.aries' uri='org.apache.aries.jpa.blueprint.aries-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      20745
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container blueprint integration for Aries blueprint'/>
      <p n='symbolicname' v='org.apache.aries.jpa.blueprint.aries'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.jpa.container.context.PersistenceContextProvider)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.jpa.container.context.PersistenceContextProvider
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.mutable)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.mutable ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container.context)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container.context ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.container/0.3.0' presentationname='Aries JPA Container' symbolicname='org.apache.aries.jpa.container' uri='org.apache.aries.jpa.container-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      86889
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container'/>
      <p n='symbolicname' v='org.apache.aries.jpa.container'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.context'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.parsing'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container'/>
      <p n='uses' v='javax.persistence.spi,org.apache.aries.jpa.container.parsing,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.criteria ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.metamodel ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container.parsing)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container.parsing ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.container.context/0.3.0' presentationname='Aries JPA Container Managed Contexts' symbolicname='org.apache.aries.jpa.container.context' uri='org.apache.aries.jpa.container.context-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      39647
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container Managed Contexts'/>
      <p n='symbolicname' v='org.apache.aries.jpa.container.context'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.context'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.criteria ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.metamodel ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container.context)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container.context ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.proxy/0.3.0' presentationname='Apache Aries Proxy Bundle' symbolicname='org.apache.aries.proxy' uri='org.apache.aries.proxy-0.3.jar' version='0.3.0'>
    <description>
      This bundle contains the Apache Aries Proxy Service.
    </description>
    <size>
      40726
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Proxy Bundle'/>
      <p n='symbolicname' v='org.apache.aries.proxy'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy'/>
      <p n='uses' v='org.apache.aries.util.nls,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.nls)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.nls ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.objectweb.asm
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm.commons)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.objectweb.asm.commons
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.samples.ariestrader.derby.ds/0.3.0' presentationname='AriesTrader :: Modules - Derby DataSource' symbolicname='org.apache.aries.samples.ariestrader.derby.ds' uri='org.apache.aries.samples.ariestrader.derby.ds-0.3.jar' version='0.3.0'>
    <description>
      AriesTrader Derby DataSource
    </description>
    <size>
      9501
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='javax.sql.DataSource'/>
    </capability>
    <capability name='service'>
      <p n='service' v='javax.sql.XADataSource'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='AriesTrader :: Modules - Derby DataSource'/>
      <p n='symbolicname' v='org.apache.aries.samples.ariestrader.derby.ds'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.derby.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.derby.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.transaction.blueprint/0.3.0' presentationname='Apache Aries Transaction Blueprint' symbolicname='org.apache.aries.transaction.blueprint' uri='org.apache.aries.transaction.blueprint-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      37357
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Transaction Blueprint'/>
      <p n='symbolicname' v='org.apache.aries.transaction.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.transaction.exception'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=javax.transaction.TransactionManager)' multiple='true' name='service' optional='false'>
      Import Service javax.transaction.TransactionManager
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.transaction.manager/0.3.0' presentationname='Apache Aries Transaction Manager' symbolicname='org.apache.aries.transaction.manager' uri='org.apache.aries.transaction.manager-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      175684
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='javax.transaction.TransactionManager'/>
    </capability>
    <capability name='service'>
      <p n='service' v='javax.transaction.TransactionSynchronizationRegistry'/>
    </capability>
    <capability name='service'>
      <p n='service' v='javax.transaction.UserTransaction'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.geronimo.transaction.manager.RecoverableTransactionManager'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Transaction Manager'/>
      <p n='symbolicname' v='org.apache.aries.transaction.manager'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.log'/>
      <p n='uses' v='javax.transaction.xa,org.apache.geronimo.transaction.manager,org.slf4j'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.manager'/>
      <p n='uses' v='javax.transaction,javax.transaction.xa,org.slf4j,javax.resource.spi,org.apache.geronimo.transaction.log'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction'/>
      <p n='uses' v='javax.transaction'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.jta)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.jta ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support ;version=[2.5.0,4.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.transaction.wrappers/0.3.0' presentationname='Apache Aries Transaction Enlisting JDBC Datasource' symbolicname='org.apache.aries.transaction.wrappers' uri='org.apache.aries.transaction.wrappers-0.3.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      18015
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Transaction Enlisting JDBC Datasource'/>
      <p n='symbolicname' v='org.apache.aries.transaction.wrappers'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.util/0.3.0' presentationname='Apache Aries Util' symbolicname='org.apache.aries.util' uri='org.apache.aries.util-0.3.jar' version='0.3.0'>
    <description>
      This bundle contains the OSGi common util for Apache Aries
    </description>
    <size>
      44407
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Util'/>
      <p n='symbolicname' v='org.apache.aries.util'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.tracker'/>
      <p n='uses' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.framework.launch,org.osgi.service.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.nls'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.adaptor
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.internal.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.internal.loader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.internal.loader
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.launch)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.launch ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.commons.collections/3.2.1' presentationname='Commons Collections' symbolicname='org.apache.commons.collections' uri='commons-collections-3.2.1.jar' version='3.2.1'>
    <description>
      Types that extend and augment the Java Collections Framework.
    </description>
    <size>
      575389
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/collections/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Collections'/>
      <p n='symbolicname' v='org.apache.commons.collections'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.map'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.buffer'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.comparators'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.collection'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.bag'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.iterators'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.bidimap'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.set'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.functors'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.list'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.keyvalue'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections'/>
      <p n='version' t='version' v='3.2.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.bag)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.bag ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.bidimap)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.bidimap ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.buffer)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.buffer ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.collection)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.collection ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.comparators)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.comparators ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.functors)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.functors ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.iterators)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.iterators ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.keyvalue)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.keyvalue ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.list)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.list ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.map)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.map ;version=3.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.set)(version&gt;=3.2.1))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.set ;version=3.2.1
    </require>
  </resource>
  <resource id='org.apache.commons.lang/2.5.0' presentationname='Commons Lang' symbolicname='org.apache.commons.lang' uri='commons-lang-2.5.jar' version='2.5.0'>
    <description>
      Commons Lang, a package of Java utility classes for the   
           classes that are in java.lang's hierarchy, or are considered
       to be so        standard as to justify existence in java.lang.
    </description>
    <size>
      279193
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/lang/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Lang'/>
      <p n='symbolicname' v='org.apache.commons.lang'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.enum'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.enums'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.builder'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.time'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.exception'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.mutable'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.text'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.reflect'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.math'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.builder)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.builder ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.enum)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.enum ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.enums)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.enums ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.exception)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.exception ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.math)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.math ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.mutable)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.mutable ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.reflect)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.reflect ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.text)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.text ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.time)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.time ;version=2.5.0
    </require>
  </resource>
  <resource id='org.apache.commons.pool/1.5.4' presentationname='Commons Pool' symbolicname='org.apache.commons.pool' uri='commons-pool-1.5.4.jar' version='1.5.4'>
    <description>
      Commons Object Pooling Library
    </description>
    <size>
      96221
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/pool/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Pool'/>
      <p n='symbolicname' v='org.apache.commons.pool'/>
      <p n='version' t='version' v='1.5.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.pool.impl'/>
      <p n='version' t='version' v='1.5.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.pool'/>
      <p n='version' t='version' v='1.5.4'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool)(version&gt;=1.5.4))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.pool ;version=1.5.4
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool.impl)(version&gt;=1.5.4))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.pool.impl ;version=1.5.4
    </require>
  </resource>
  <resource id='org.apache.felix.bundlerepository/1.6.4' presentationname='Apache Felix Bundle Repository' symbolicname='org.apache.felix.bundlerepository' uri='org.apache.felix.bundlerepository-1.6.4.jar' version='1.6.4'>
    <description>
      Bundle repository service.
    </description>
    <size>
      153005
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-osgi-bundle-repository.html
    </documentation>
    <source>
      http://felix.apache.org/site/downloads.cgi
    </source>
    <capability name='service'>
      <p n='service' v='org.apache.felix.bundlerepository.RepositoryAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Bundle Repository'/>
      <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
      <p n='version' t='version' v='1.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.bundlerepository'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.bundlerepository ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.obr ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.fileinstall/3.1.4' presentationname='Apache Felix File Install' symbolicname='org.apache.felix.fileinstall' uri='org.apache.felix.fileinstall-3.1.4.jar' version='3.1.4'>
    <description>
      A utility to automatically install bundles from a directory.
    </description>
    <size>
      71899
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix File Install'/>
      <p n='symbolicname' v='org.apache.felix.fileinstall'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.fileinstall'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.fileinstall ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.startlevel ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.geronimo.components.geronimo-transaction/2.1.3' presentationname='Geronimo TxManager :: Transaction' symbolicname='org.apache.geronimo.components.geronimo-transaction' uri='geronimo-transaction-2.1.3.jar' version='2.1.3'>
    <description>
      Geronimo Transaction Manager
    </description>
    <size>
      57705
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://geronimo.apache.org/maven/txmanager/2.1.3/geronimo-transaction
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Geronimo TxManager :: Transaction'/>
      <p n='symbolicname' v='org.apache.geronimo.components.geronimo-transaction'/>
      <p n='version' t='version' v='2.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.log'/>
      <p n='uses' v='org.objectweb.howl.log,org.objectweb.howl.log.xa,javax.transaction.xa,org.apache.geronimo.transaction.manager,org.slf4j'/>
      <p n='version' t='version' v='2.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.manager'/>
      <p n='uses' v='javax.resource.spi,javax.transaction,javax.transaction.xa,org.slf4j,org.apache.geronimo.transaction.log'/>
      <p n='version' t='version' v='2.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction'/>
      <p n='uses' v='javax.transaction'/>
      <p n='version' t='version' v='2.1.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.resource.spi ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.howl.log)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.howl.log ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.howl.log.xa)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.howl.log.xa ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.geronimo.specs.geronimo-jpa_2.0_spec/1.1.0' presentationname='Apache Geronimo JSR-317 JPA 2.0 Spec API' symbolicname='org.apache.geronimo.specs.geronimo-jpa_2.0_spec' uri='geronimo-jpa_2.0_spec-1.1.jar' version='1.1.0'>
    <description>
      Implementation of Sun JSR-317 JPA 2.0 Spec API
    </description>
    <size>
      120194
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://geronimo.apache.org/maven/specs/geronimo-jpa_2.0_spec/1.1
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Geronimo JSR-317 JPA 2.0 Spec API'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jpa_2.0_spec'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='jpa' v='2.0'/>
      <p n='package' v='javax.persistence'/>
      <p n='uses' v='javax.persistence.criteria,javax.persistence.metamodel,javax.persistence.spi'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='jpa' v='2.0'/>
      <p n='package' v='javax.persistence.criteria'/>
      <p n='uses' v='javax.persistence.metamodel,javax.persistence'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='jpa' v='2.0'/>
      <p n='package' v='javax.persistence.metamodel'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='jpa' v='2.0'/>
      <p n='package' v='javax.persistence.spi'/>
      <p n='uses' v='javax.persistence,javax.sql'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='jpa' v='2.0'/>
      <p n='package' v='javax.persistence'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.criteria'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.metamodel'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.spi'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.1.0)(jpa=2.0)(mandatory:&lt;*jpa))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=1.1.0)(jpa=2.0)(mandatory:&lt;*jpa))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.criteria ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=1.1.0)(jpa=2.0)(mandatory:&lt;*jpa))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.metamodel ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.1.0)(jpa=2.0)(mandatory:&lt;*jpa))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.geronimo.osgi.registry.api)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.geronimo.osgi.registry.api
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.tracker ;version=1.3.0
    </require>
  </resource>
  <resource id='org.apache.geronimo.specs.geronimo-jta_1.1_spec/1.1.1' presentationname='geronimo-jta_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jta_1.1_spec' uri='geronimo-jta_1.1_spec-1.1.1.jar' version='1.1.1'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      16030
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jta_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jta_1.1_spec'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=1.1.0
    </require>
  </resource>
  <resource id='org.apache.geronimo.specs.geronimo-servlet_2.5_spec/1.2.0' presentationname='geronimo-servlet_2.5_spec' symbolicname='org.apache.geronimo.specs.geronimo-servlet_2.5_spec' uri='geronimo-servlet_2.5_spec-1.2.jar' version='1.2.0'>
    <description>
      Servlet 2.5 Specification
    </description>
    <size>
      70593
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-servlet_2.5_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-servlet_2.5_spec'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.http'/>
      <p n='uses' v='javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.resources'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.resources)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.resources ;version=2.5.0
    </require>
  </resource>
  <resource id='org.apache.openjpa/2.0.0' presentationname='OpenJPA Aggregate Jar' symbolicname='org.apache.openjpa' uri='openjpa-2.0.0.jar' version='2.0.0'>
    <description>
      Apache OpenJPA implementation of JSR-317 JPA 2.0
    </description>
    <size>
      4068849
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://openjpa.apache.org/openjpa
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OpenJPA Aggregate Jar'/>
      <p n='symbolicname' v='org.apache.openjpa'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.slice.transaction'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.encryption'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.validation'/>
      <p n='uses' v='javax.validation,org.apache.openjpa.persistence,javax.persistence.spi,org.apache.openjpa.validation,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.conf,javax.persistence,org.apache.openjpa.lib.util,javax.validation.groups,javax.validation.metadata'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.util'/>
      <p n='uses' v='org.apache.openjpa.conf,org.apache.commons.collections.set,org.apache.commons.collections.iterators,org.apache.openjpa.lib.util,org.apache.commons.collections,org.apache.openjpa.meta,org.apache.openjpa.kernel,org.apache.openjpa.enhance,org.apache.commons.lang,org.apache.openjpa.lib.util.concurrent,serp.bytecode,serp.util,org.apache.openjpa.lib.log'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.log'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.log4j,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.criteria'/>
      <p n='uses' v='org.apache.openjpa.kernel.exps,javax.persistence.criteria,org.apache.openjpa.enhance,javax.persistence.metamodel,org.apache.openjpa.kernel,org.apache.openjpa.persistence,javax.persistence,org.apache.openjpa.lib.util,org.apache.openjpa.persistence.meta,org.apache.openjpa.meta,org.apache.openjpa.kernel.jpql,org.apache.openjpa.util,org.apache.openjpa.persistence.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.ant'/>
      <p n='uses' v='org.apache.tools.ant.taskdefs,org.apache.tools.ant.types,org.apache.openjpa.lib.conf,org.apache.tools.ant,org.apache.openjpa.lib.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.util'/>
      <p n='uses' v='serp.bytecode,serp.util,org.apache.commons.lang.exception,org.apache.commons.lang,javax.validation,org.apache.commons.collections.map,org.apache.commons.collections.set,serp.bytecode.lowlevel'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.identifier'/>
      <p n='uses' v='org.apache.commons.lang,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.kernel.exps'/>
      <p n='uses' v='org.apache.openjpa.jdbc.sql,org.apache.openjpa.kernel.exps,org.apache.openjpa.meta,org.apache.openjpa.kernel,org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.conf,org.apache.openjpa.lib.util,org.apache.openjpa.jdbc.conf,org.apache.openjpa.enhance,org.apache.openjpa.jdbc.meta.strats,serp.util,org.apache.commons.lang,org.apache.openjpa.jdbc.identifier'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.slice.jdbc'/>
      <p n='uses' v='org.apache.openjpa.lib.util,javax.sql,org.apache.openjpa.lib.jdbc,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.slice,org.apache.openjpa.jdbc.conf,org.apache.openjpa.lib.conf,org.apache.openjpa.conf,org.apache.openjpa.kernel,org.apache.openjpa.jdbc.sql,org.apache.openjpa.util,org.apache.openjpa.lib.log,org.apache.openjpa.jdbc.schema,org.apache.openjpa.meta,org.apache.openjpa.lib.rop,org.apache.openjpa.enhance,org.apache.openjpa.kernel.exps'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.meta'/>
      <p n='uses' v='org.apache.openjpa.jdbc.sql,org.apache.openjpa.util,org.apache.openjpa.lib.rop,org.apache.openjpa.conf,org.apache.openjpa.lib.log,org.apache.openjpa.enhance,org.apache.openjpa.lib.util,org.apache.openjpa.meta,org.apache.openjpa.kernel,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.jdbc.identifier,org.apache.openjpa.jdbc.meta.strats,org.apache.openjpa.jdbc.schema,org.apache.openjpa.lib.xml,org.apache.openjpa.lib.meta,org.apache.commons.lang,serp.util,org.apache.openjpa.jdbc.conf,org.apache.openjpa.lib.conf,serp.bytecode'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.datacache'/>
      <p n='uses' v='org.apache.openjpa.lib.util.concurrent,serp.util,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.conf,org.apache.openjpa.lib.util,org.apache.commons.lang,org.apache.openjpa.event,org.apache.openjpa.meta,org.apache.openjpa.kernel,serp.bytecode,org.apache.openjpa.enhance,org.apache.openjpa.lib.rop,org.apache.commons.collections.map,org.apache.openjpa.kernel.exps'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.slice'/>
      <p n='uses' v='org.apache.openjpa.kernel,org.apache.openjpa.slice.jdbc,org.apache.openjpa.conf,org.apache.openjpa.lib.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.util,org.apache.openjpa.enhance,org.apache.openjpa.meta'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.conf'/>
      <p n='uses' v='org.apache.openjpa.lib.conf,org.apache.openjpa.jdbc.meta,javax.sql,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.jdbc,org.apache.openjpa.jdbc.sql,org.apache.openjpa.conf,org.apache.openjpa.jdbc.identifier,org.apache.openjpa.kernel,org.apache.openjpa.jdbc.schema,serp.bytecode,serp.bytecode.lowlevel,org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,org.apache.openjpa.meta,org.apache.commons.lang,serp.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.ee'/>
      <p n='uses' v='org.apache.openjpa.util,javax.transaction,org.apache.openjpa.lib.util,org.apache.openjpa.lib.conf,org.apache.openjpa.conf,javax.naming,javax.transaction.xa,com.ibm.websphere.jtaextensions,org.apache.openjpa.lib.log,serp.bytecode,com.ibm.wsspi.uow'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.meta'/>
      <p n='uses' v='serp.util,org.apache.openjpa.lib.util,org.apache.commons.lang,org.xml.sax,serp.bytecode.lowlevel,org.apache.openjpa.lib.log,org.apache.commons.lang.exception,org.apache.openjpa.lib.xml,javax.xml.parsers,org.xml.sax.ext,org.xml.sax.helpers,javax.xml.transform,javax.xml.transform.stream,javax.xml.transform.sax'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.util'/>
      <p n='uses' v='org.apache.openjpa.lib.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.query'/>
      <p n='uses' v='org.apache.openjpa.meta,org.apache.openjpa.kernel,org.apache.openjpa.util,org.apache.openjpa.persistence,org.apache.openjpa.conf,org.apache.openjpa.lib.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.ant'/>
      <p n='uses' v='org.apache.openjpa.lib.conf,org.apache.openjpa.conf,org.apache.openjpa.lib.ant,org.apache.openjpa.enhance,org.apache.openjpa.lib.util,org.apache.tools.ant.types,org.apache.openjpa.meta,org.apache.tools.ant'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.identifier'/>
      <p n='uses' v='org.apache.commons.lang,org.apache.openjpa.lib.identifier,org.apache.openjpa.jdbc.schema,org.apache.openjpa.jdbc.sql,org.apache.openjpa.jdbc.conf,org.apache.openjpa.lib.conf'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.schema'/>
      <p n='uses' v='org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.identifier,org.apache.commons.lang,javax.sql,org.apache.openjpa.lib.jdbc,org.apache.openjpa.lib.util,org.apache.openjpa.jdbc.sql,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.jdbc.conf,org.apache.openjpa.kernel,org.apache.openjpa.lib.identifier,org.apache.openjpa.lib.meta,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.xml,org.xml.sax'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.meta'/>
      <p n='uses' v='javax.persistence.metamodel,org.apache.openjpa.kernel,org.apache.openjpa.meta,org.apache.openjpa.lib.util,javax.annotation,javax.lang.model.util,javax.tools,javax.lang.model.type,javax.lang.model,org.apache.openjpa.persistence,javax.lang.model.element,org.apache.openjpa.persistence.util,javax.annotation.processing,org.apache.openjpa.util,org.apache.openjpa.conf,org.apache.openjpa.kernel.exps,javax.persistence'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.xml'/>
      <p n='uses' v='org.apache.openjpa.lib.util,org.xml.sax,org.apache.commons.lang.exception,javax.xml.parsers,org.w3c.dom'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.sql'/>
      <p n='uses' v='org.apache.openjpa.jdbc.kernel.exps,org.apache.openjpa.jdbc.meta,org.apache.openjpa.kernel.exps,org.apache.openjpa.jdbc.schema,org.apache.openjpa.jdbc.kernel,serp.util,org.apache.openjpa.util,org.apache.openjpa.lib.util,org.apache.openjpa.jdbc.identifier,org.apache.openjpa.lib.log,org.apache.openjpa.meta,org.apache.openjpa.kernel,org.apache.openjpa.jdbc.conf,org.apache.openjpa.lib.identifier,org.apache.commons.lang,org.apache.openjpa.lib.conf,javax.sql,org.apache.openjpa.lib.jdbc,org.postgresql.largeobject,org.postgresql,org.apache.openjpa.lib.xml,javax.xml.parsers,org.w3c.dom,org.apache.commons.collections.iterators'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.rop'/>
      <p n='uses' v='org.apache.openjpa.lib.util,org.apache.commons.lang,org.apache.commons.lang.exception,org.apache.commons.collections'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.conf'/>
      <p n='uses' v='org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,serp.util,org.apache.commons.lang,javax.naming,org.apache.openjpa.lib.util.concurrent,org.apache.commons.lang.exception'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.kernel.jpql'/>
      <p n='uses' v='org.apache.openjpa.util,org.apache.openjpa.kernel.exps,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.apache.openjpa.conf,org.apache.openjpa.lib.log,org.apache.openjpa.meta'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.conf'/>
      <p n='uses' v='org.apache.openjpa.lib.conf,org.apache.openjpa.abstractstore,org.apache.openjpa.util,org.apache.openjpa.kernel,org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,org.apache.openjpa.meta,org.apache.openjpa.lib.encryption,org.apache.openjpa.datacache,org.apache.openjpa.ee,org.apache.openjpa.kernel.exps,org.apache.openjpa.event,org.apache.commons.lang,org.apache.openjpa.validation,org.apache.openjpa.lib.util.concurrent'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.enhance'/>
      <p n='uses' v='org.apache.openjpa.lib.conf,org.apache.openjpa.conf,org.apache.openjpa.lib.util,serp.bytecode,org.apache.openjpa.util,serp.util,org.apache.openjpa.lib.log,org.apache.commons.lang,org.apache.openjpa.meta,org.apache.openjpa.lib.meta,serp.bytecode.lowlevel,org.apache.openjpa.kernel,org.apache.openjpa.lib.util.concurrent'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.kernel'/>
      <p n='uses' v='javax.transaction,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.conf,org.apache.openjpa.enhance,org.apache.openjpa.lib.util,org.apache.openjpa.meta,org.apache.openjpa.event,org.apache.commons.lang,org.apache.openjpa.lib.util.concurrent,org.apache.openjpa.datacache,org.apache.openjpa.ee,org.apache.commons.collections.set,org.apache.commons.collections.map,org.apache.openjpa.kernel.exps,org.apache.commons.collections.iterators,org.apache.openjpa.lib.rop,org.apache.commons.collections,serp.util,javax.transaction.xa'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.event'/>
      <p n='uses' v='org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,org.apache.openjpa.util,org.apache.openjpa.kernel,org.apache.openjpa.lib.util.concurrent,org.apache.openjpa.meta,javax.jms,javax.naming,org.apache.openjpa.conf,org.apache.commons.pool,org.apache.commons.pool.impl,serp.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.meta'/>
      <p n='uses' v='org.apache.openjpa.lib.meta,org.apache.openjpa.util,serp.util,org.apache.openjpa.lib.log,org.apache.openjpa.conf,org.apache.openjpa.lib.util,org.apache.commons.lang,org.apache.openjpa.enhance,org.apache.openjpa.lib.xml,org.apache.openjpa.lib.conf,org.apache.openjpa.datacache,org.apache.commons.collections.comparators,org.apache.openjpa.kernel,serp.bytecode,org.apache.openjpa.event,org.apache.commons.collections.bidimap'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.util.concurrent'/>
      <p n='uses' v='org.apache.openjpa.lib.util,org.apache.commons.collections.set'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.osgi'/>
      <p n='uses' v='org.osgi.framework,org.apache.openjpa.persistence,javax.persistence.spi'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.xmlstore'/>
      <p n='uses' v='org.apache.openjpa.util,org.apache.openjpa.conf,org.apache.openjpa.event,org.apache.openjpa.meta,org.apache.openjpa.kernel,org.apache.openjpa.lib.conf,org.apache.openjpa.enhance,org.apache.openjpa.lib.util,org.xml.sax,org.xml.sax.helpers,org.apache.openjpa.lib.xml,javax.xml.parsers,org.apache.openjpa.lib.rop,org.apache.openjpa.abstractstore'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.ant'/>
      <p n='uses' v='org.apache.openjpa.jdbc.meta,org.apache.tools.ant.types,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.jdbc.conf,org.apache.openjpa.lib.conf,org.apache.tools.ant,org.apache.openjpa.lib.ant,org.apache.openjpa.lib.util,org.apache.commons.lang'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.validation'/>
      <p n='uses' v='org.apache.openjpa.lib.conf,org.apache.openjpa.conf,org.apache.openjpa.meta,org.apache.openjpa.event,org.apache.openjpa.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.kernel'/>
      <p n='uses' v='org.apache.openjpa.kernel,org.apache.openjpa.lib.conf,org.apache.openjpa.conf,org.apache.openjpa.jdbc.meta,javax.sql,org.apache.openjpa.jdbc.sql,org.apache.openjpa.util,org.apache.openjpa.jdbc.conf,org.apache.openjpa.jdbc.schema,org.apache.openjpa.meta,org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,org.apache.openjpa.lib.jdbc,org.apache.openjpa.lib.meta,org.apache.openjpa.jdbc.identifier,org.apache.openjpa.lib.graph,org.apache.commons.lang,org.apache.openjpa.lib.rop,org.apache.openjpa.enhance,org.apache.openjpa.event,org.apache.openjpa.datacache,org.apache.openjpa.kernel.exps,org.apache.openjpa.jdbc.meta.strats,org.apache.openjpa.jdbc.kernel.exps,org.apache.openjpa.kernel.jpql,javax.transaction,org.apache.openjpa.ee'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.jdbc'/>
      <p n='uses' v='org.apache.openjpa.lib.util,org.apache.openjpa.lib.log,javax.sql,org.apache.commons.lang.exception,org.apache.openjpa.lib.util.concurrent'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.lib.graph'/>
      <p n='uses' v='org.apache.openjpa.lib.util'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence'/>
      <p n='uses' v='serp.util,org.apache.commons.lang,javax.persistence,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.log,org.apache.openjpa.conf,org.apache.openjpa.enhance,org.apache.openjpa.lib.util,org.apache.openjpa.event,org.apache.openjpa.meta,org.apache.openjpa.lib.meta,org.apache.openjpa.persistence.meta,org.apache.openjpa.persistence.criteria,javax.persistence.criteria,org.apache.openjpa.kernel,org.apache.openjpa.datacache,javax.persistence.spi,org.apache.openjpa.persistence.query,javax.persistence.metamodel,org.apache.openjpa.persistence.validation,org.apache.openjpa.ee,org.apache.openjpa.kernel.exps,javax.naming,javax.rmi,org.xml.sax,org.apache.openjpa.persistence.osgi,javax.sql,org.apache.openjpa.lib.rop,org.apache.openjpa.lib.xml'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.abstractstore'/>
      <p n='uses' v='org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.conf,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.apache.openjpa.lib.rop,org.apache.openjpa.meta'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.persistence.jdbc'/>
      <p n='uses' v='javax.persistence,org.apache.openjpa.jdbc.sql,org.apache.openjpa.util,org.apache.openjpa.conf,org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,org.apache.commons.lang,org.apache.openjpa.meta,org.apache.openjpa.jdbc.meta,org.apache.openjpa.persistence,org.apache.openjpa.jdbc.conf,org.apache.openjpa.jdbc.identifier,org.apache.openjpa.jdbc.schema,org.apache.openjpa.jdbc.meta.strats,serp.util,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.kernel,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.xml,org.xml.sax'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.kernel.exps'/>
      <p n='uses' v='org.apache.openjpa.kernel,serp.util,org.apache.openjpa.util,org.apache.openjpa.conf,org.apache.openjpa.lib.util,org.apache.openjpa.meta,org.apache.openjpa.enhance,org.apache.commons.lang,org.apache.openjpa.kernel.jpql'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.openjpa.jdbc.meta.strats'/>
      <p n='uses' v='org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.jdbc.sql,org.apache.openjpa.lib.rop,org.apache.openjpa.kernel,org.apache.openjpa.lib.log,org.apache.openjpa.lib.util,org.apache.openjpa.util,org.apache.openjpa.jdbc.identifier,org.apache.openjpa.jdbc.schema,org.apache.commons.lang,org.apache.openjpa.jdbc.conf,org.apache.openjpa.meta,org.apache.openjpa.enhance,org.apache.openjpa.conf,javax.xml.transform,javax.xml.transform.stream,javax.xml.bind'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.jtaextensions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.jtaextensions
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.wsspi.uow)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.wsspi.uow
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation.processing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.annotation.processing
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='true'>
      Import package javax.jms ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model.element)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model.element
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model.type)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model.type
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=2.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[2.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=2.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.criteria ;version=[2.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=2.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.metamodel ;version=[2.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=2.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=[2.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.rmi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.rmi
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.tools)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.tools
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction.xa ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.groups)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.groups ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.metadata ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=3.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections ;version=3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.bidimap)(version&gt;=3.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.bidimap ;version=3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.comparators)(version&gt;=3.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.comparators ;version=3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.iterators)(version&gt;=3.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.iterators ;version=3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.map)(version&gt;=3.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.map ;version=3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.set)(version&gt;=3.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.set ;version=3.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.exception)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.exception
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.pool ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool.impl)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.pool.impl ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.abstractstore)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.abstractstore ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.ant)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.ant ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.conf)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.conf ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.datacache)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.datacache ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.ee)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.ee ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.enhance)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.enhance ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.event)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.event ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.ant)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.ant ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.conf)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.conf ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.identifier)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.identifier ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.kernel)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.kernel ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.kernel.exps)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.kernel.exps ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.meta)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.meta ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.meta.strats)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.meta.strats ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.schema)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.schema ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.jdbc.sql)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.jdbc.sql ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.kernel)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.kernel ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.kernel.exps)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.kernel.exps ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.kernel.jpql)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.kernel.jpql ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.ant)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.ant ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.conf)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.conf ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.encryption)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.encryption ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.graph)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.graph ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.identifier)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.identifier ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.jdbc)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.jdbc ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.log)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.log ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.meta)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.meta ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.rop)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.rop ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.util)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.util ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.util.concurrent)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.util.concurrent ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.lib.xml)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.lib.xml ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.meta)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.meta ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.criteria)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.criteria ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.jdbc)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.jdbc ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.meta)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.meta ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.osgi)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.osgi ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.query)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.query ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.util)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.util ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence.validation)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.persistence.validation ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.slice)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.slice ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.slice.jdbc)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.slice.jdbc ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.slice.transaction)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.slice.transaction ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.util)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.util ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.validation)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.validation ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.xmlstore)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.openjpa.xmlstore ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.taskdefs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.postgresql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.postgresql
    </require>
    <require extend='false' filter='(&amp;(package=org.postgresql.largeobject)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.postgresql.largeobject
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=serp.bytecode)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package serp.bytecode
    </require>
    <require extend='false' filter='(&amp;(package=serp.bytecode.lowlevel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package serp.bytecode.lowlevel
    </require>
    <require extend='false' filter='(&amp;(package=serp.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package serp.util
    </require>
  </resource>
  <resource id='org.eclipse.equinox.cm/3.2.0.v20070116' presentationname='Configuration Admin' symbolicname='org.eclipse.equinox.cm' uri='cm-3.2.0-v20070116.jar' version='3.2.0.v20070116'>
    <size>
      43895
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Configuration Admin'/>
      <p n='symbolicname' v='org.eclipse.equinox.cm'/>
      <p n='version' t='version' v='3.2.0.v20070116'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.osgi.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.1))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=1.3.1
    </require>
    <require extend='false' filter='(|(ee=OSGi/Minimum-1.1)(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=OSGi/Minimum-1.1)(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.eclipse.osgi.services/3.1.200.v20070605' presentationname='OSGi Release 4.0.1 Services' symbolicname='org.eclipse.osgi.services' uri='services-3.1.200-v20070605.jar' version='3.1.200.v20070605'>
    <description>
      OSGi Service Platform Release 4.0.1 Service Interfaces and
       Classes
    </description>
    <size>
      63704
    </size>
    <documentation>
      http://www.eclipse.org
    </documentation>
    <copyright>
      Copyright (c) 2003, 2004 IBM Corporation and others. All rights
       reserved. This program and the accompanying materials  are
       made available under the terms of the Eclipse Public License
       v1.0 which accompanies this distribution, and is available
       at http://www.eclipse.org/legal/epl-v10.html
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OSGi Release 4.0.1 Services'/>
      <p n='symbolicname' v='org.eclipse.osgi.services'/>
      <p n='version' t='version' v='3.1.200.v20070605'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.device'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.event'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.http'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.io'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.metatype'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.provisioning'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.upnp'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.useradmin'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.wireadmin'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(|(ee=OSGi/Minimum-1.0))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=OSGi/Minimum-1.0))
    </require>
  </resource>
  <resource id='org.objectweb.asm.all/3.2.0' presentationname='ASM all classes' symbolicname='org.objectweb.asm.all' uri='asm-all-3.2.jar' version='3.2.0'>
    <size>
      203417
    </size>
    <documentation>
      http://asm.objectweb.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ASM all classes'/>
      <p n='symbolicname' v='org.objectweb.asm.all'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.signature'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.commons'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree.analysis'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.util'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.xml'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.ops4j.pax.logging.pax-logging-api/1.4.0' presentationname='OPS4J Pax Logging - API' symbolicname='org.ops4j.pax.logging.pax-logging-api' uri='pax-logging-api-1.4.jar' version='1.4.0'>
    <description>
      The Pax Logging API Library is to allow for the Pax Logging
       Service to be reloaded without stopping the many    dependent
       bundles. It also contains the OSGi Log Service API and the
       Knopflerfish Log API.
    </description>
    <size>
      88414
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/projects/pax/logging/pax-logging-api
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OPS4J Pax Logging - API'/>
      <p n='symbolicname' v='org.ops4j.pax.logging.pax-logging-api'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.juli.logging'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.ops4j.pax.logging,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.log'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.osgi.service.log,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.slf4j'/>
      <p n='version' t='version' v='1.5.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.spi'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.apache.log4j'/>
      <p n='version' t='version' v='1.2.15'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avalon.framework.logger'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.apache.log'/>
      <p n='version' t='version' v='4.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.xml'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='javax.xml.parsers,org.w3c.dom'/>
      <p n='version' t='version' v='1.2.15'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.ops4j.pax.logging,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.knopflerfish.service.log,org.osgi.framework,org.osgi.util.tracker'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.ops4j.pax.logging,org.apache.log4j.spi,org.osgi.framework'/>
      <p n='version' t='version' v='1.2.15'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.slf4j.spi,org.slf4j.helpers'/>
      <p n='version' t='version' v='1.5.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.slf4j.spi,org.slf4j'/>
      <p n='version' t='version' v='1.5.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging.avalon'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses' v='org.ops4j.pax.logging,org.apache.avalon.framework.logger,org.osgi.framework'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=4.3.0)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.avalon.framework.logger ;version=4.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=1.1.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging.impl)(version&gt;=1.1.1)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging.impl ;version=1.1.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=1.0.0)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j ;version=1.2.15
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.spi)(version&gt;=1.2.15)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j.spi ;version=1.2.15
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.xml)(version&gt;=1.2.15)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j.xml ;version=1.2.15
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.1.0)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.logging)(version&gt;=0.9.5)(!(version&gt;=2.0.0))(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.ops4j.pax.logging ;version=[0.9.5,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.logging.avalon)(version&gt;=0.9.5)(!(version&gt;=2.0.0))(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.ops4j.pax.logging.avalon ;version=[0.9.5,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.6)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.5.6
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.helpers)(version&gt;=1.5.6)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.helpers ;version=1.5.6
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.5.6)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=1.5.6
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.ops4j.pax.logging.pax-logging-service/1.4.0' presentationname='OPS4J Pax Logging - Service' symbolicname='org.ops4j.pax.logging.pax-logging-service' uri='pax-logging-service-1.4.jar' version='1.4.0'>
    <description>
      Pax Logging Service is a Log4J driven service that supports
       Jakarta Commons Logging,    Log4J, Avalon Logging, SLF4J and
       Pax Logging clients. Note that all this clients must use the
       Pax Logging    Client library in the proper way. See documentation
       for details.
    </description>
    <size>
      427221
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/projects/pax/logging/pax-logging-service
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OPS4J Pax Logging - Service'/>
      <p n='symbolicname' v='org.ops4j.pax.logging.pax-logging-service'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging.spi'/>
      <p n='provider' v='paxlogging'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.jdmk.comm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.jdmk.comm
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jms
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.1.0)(!(version&gt;=2.0.0))(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.logging)(version&gt;=0.9.5)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.ops4j.pax.logging ;version=[0.9.5,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.logging.spi)(version&gt;=1.4.0)(provider=paxlogging)(mandatory:&lt;*provider))' multiple='false' name='package' optional='false'>
      Import package org.ops4j.pax.logging.spi ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.ops4j.pax.web.pax-web-extender-war/0.8.1' presentationname='OPS4J Pax Web - Extender - WAR' symbolicname='org.ops4j.pax.web.pax-web-extender-war' uri='pax-web-extender-war-0.8.1.jar' version='0.8.1'>
    <description>
      Extender for WAR files.    Detailed information to be found
       at http://wiki.ops4j.org/confluence/x/OQJN.
    </description>
    <size>
      112655
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OPS4J Pax Web - Extender - WAR'/>
      <p n='symbolicname' v='org.ops4j.pax.web.pax-web-extender-war'/>
      <p n='version' t='version' v='0.8.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=2.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=1.0.4
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.web.service)(version&gt;=0.6.0))' multiple='false' name='package' optional='true'>
      Import package org.ops4j.pax.web.service ;version=0.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.http ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.ops4j.pax.web.pax-web-jetty-bundle/0.8.1' presentationname='OPS4J Pax Web - Jetty Bundle' symbolicname='org.ops4j.pax.web.pax-web-jetty-bundle' uri='pax-web-jetty-bundle-0.8.1.jar' version='0.8.1'>
    <description>
      Pax Web is a OSGi Http Service based on Jetty 6.    Detailed
       information to be found at http://wiki.ops4j.org/confluence/x/AYAz.
    </description>
    <size>
      2225198
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OPS4J Pax Web - Jetty Bundle'/>
      <p n='symbolicname' v='org.ops4j.pax.web.pax-web-jetty-bundle'/>
      <p n='version' t='version' v='0.8.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.web.service'/>
      <p n='uses' v='org.osgi.framework,javax.servlet,org.osgi.service.http'/>
      <p n='version' t='version' v='0.8.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.http'/>
      <p n='uses' v='javax.servlet.http,javax.servlet'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.webapp.jmx'/>
      <p n='uses' v='org.eclipse.jetty.webapp,org.eclipse.jetty.server.handler.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.security.authentication'/>
      <p n='uses' v='javax.servlet,org.eclipse.jetty.server,org.eclipse.jetty.security,org.eclipse.jetty.http.security,javax.servlet.http,org.eclipse.jetty.util,org.eclipse.jetty.util.log,javax.security.auth'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.continuation'/>
      <p n='uses' v='javax.servlet,org.mortbay.log,org.mortbay.util.ajax'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.ssl'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.io,javax.security.cert,javax.net.ssl,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.io.nio,org.eclipse.jetty.http,org.eclipse.jetty.server.nio,org.eclipse.jetty.util.resource,org.eclipse.jetty.http.security,org.eclipse.jetty.server.bio,org.eclipse.jetty.io.bio'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.thread'/>
      <p n='uses' v='org.eclipse.jetty.util.component,org.eclipse.jetty.util.log,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.jaas.spi'/>
      <p n='uses' v='javax.security.auth.callback,org.eclipse.jetty.http.security,javax.security.auth,org.eclipse.jetty.util.log,org.eclipse.jetty.plus.jaas,org.eclipse.jetty.plus.jaas.callback,javax.security.auth.spi,javax.security.auth.login,javax.naming,javax.sql,org.eclipse.jetty.util,javax.naming.directory'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.io.bio'/>
      <p n='uses' v='org.eclipse.jetty.io'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.jsp'/>
      <p n='uses' v='com.sun.org.apache.commons.logging,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.handler'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.util.component,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.io.nio,org.eclipse.jetty.io,org.eclipse.jetty.util.thread,org.eclipse.jetty.http,javax.servlet,javax.servlet.http,org.eclipse.jetty.util.resource,org.eclipse.jetty.util.statistic,org.eclipse.jetty.continuation'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.deploy.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.jndi'/>
      <p n='uses' v='javax.naming,org.eclipse.jetty.server.handler,org.eclipse.jetty.util.log,javax.naming.spi,org.eclipse.jetty.jndi.local'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.servlets'/>
      <p n='uses' v='org.eclipse.jetty.util.log,javax.servlet.http,org.eclipse.jetty.util,javax.servlet,org.eclipse.jetty.server,org.eclipse.jetty.io,org.eclipse.jetty.continuation,org.eclipse.jetty.util.thread,org.eclipse.jetty.http.security,org.eclipse.jetty.client,org.eclipse.jetty.http'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.servlets.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.servlet.jmx'/>
      <p n='uses' v='org.eclipse.jetty.servlet,org.eclipse.jetty.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.deploy.graph'/>
      <p n='uses' v='org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.deploy'/>
      <p n='uses' v='org.eclipse.jetty.server.handler,org.eclipse.jetty.util,org.eclipse.jetty.deploy.graph,org.eclipse.jetty.util.log,org.eclipse.jetty.util.component,org.eclipse.jetty.server,org.eclipse.jetty.util.resource,org.eclipse.jetty.xml,org.eclipse.jetty.deploy.bindings,org.eclipse.jetty.webapp'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.resource'/>
      <p n='uses' v='org.eclipse.jetty.util.log,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.annotation'/>
      <p n='uses' v='javax.naming,org.eclipse.jetty.util.log,org.eclipse.jetty.util,javax.servlet,org.eclipse.jetty.servlet,org.eclipse.jetty.servlet.api'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.webapp'/>
      <p n='uses' v='org.eclipse.jetty.util.resource,org.eclipse.jetty.xml,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.server.handler,org.eclipse.jetty.server,org.eclipse.jetty.servlet,org.eclipse.jetty.io,org.eclipse.jetty.security,org.eclipse.jetty.http,javax.servlet,org.eclipse.jetty.http.security,org.eclipse.jetty.server.session,org.eclipse.jetty.servlet.api,javax.servlet.http'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.webapp'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.webapp,javax.naming,org.eclipse.jetty.plus.jndi,org.eclipse.jetty.util.resource,org.eclipse.jetty.util.log,org.eclipse.jetty.xml,org.eclipse.jetty.jndi,org.eclipse.jetty.servlet,javax.servlet,org.eclipse.jetty.plus.annotation,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.deploy.bindings'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.server.handler,org.eclipse.jetty.deploy.graph,org.eclipse.jetty.deploy,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.security.jaspi.callback'/>
      <p n='uses' v='javax.security.auth.callback,org.eclipse.jetty.http.security,javax.security.auth'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.handler.jmx'/>
      <p n='uses' v='org.eclipse.jetty.server.handler,org.eclipse.jetty.jmx,org.eclipse.jetty.util.resource,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.deploy.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.bio'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.io.bio,org.eclipse.jetty.io,org.eclipse.jetty.http,org.eclipse.jetty.util.thread,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util'/>
      <p n='uses' v='org.eclipse.jetty.util.log,org.eclipse.jetty.util.thread'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.io'/>
      <p n='uses' v='org.eclipse.jetty.util.log,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.http'/>
      <p n='uses' v='org.eclipse.jetty.io,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.util.component,org.eclipse.jetty.util.resource'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.jaas'/>
      <p n='uses' v='org.eclipse.jetty.plus.jaas.callback,org.eclipse.jetty.server,javax.security.auth.callback,org.eclipse.jetty.security,javax.security.auth.login,javax.security.auth,org.eclipse.jetty.util.component,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.deploy.providers'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.server.handler,org.eclipse.jetty.util.resource,org.eclipse.jetty.deploy.util,org.eclipse.jetty.deploy,org.eclipse.jetty.xml,org.eclipse.jetty.util,org.eclipse.jetty.util.component,org.eclipse.jetty.util.log,org.eclipse.jetty.webapp'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.ajp'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.io,org.eclipse.jetty.http,org.eclipse.jetty.util.log,javax.servlet,org.eclipse.jetty.server.bio'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.security.jaspi.modules'/>
      <p n='uses' v='javax.security.auth.callback,org.eclipse.jetty.security.authentication,javax.security.auth,org.eclipse.jetty.http.security,org.eclipse.jetty.security.jaspi.callback,javax.servlet.http,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.security'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.session'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.util.component,org.eclipse.jetty.util.log,javax.servlet.http,javax.servlet,org.eclipse.jetty.server.handler,org.eclipse.jetty.util,org.eclipse.jetty.util.statistic,org.eclipse.jetty.http,javax.naming,javax.sql'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.client'/>
      <p n='uses' v='org.eclipse.jetty.io,org.eclipse.jetty.http,org.eclipse.jetty.util,org.eclipse.jetty.util.thread,javax.net.ssl,org.eclipse.jetty.util.component,org.eclipse.jetty.client.security,org.eclipse.jetty.util.resource,org.eclipse.jetty.io.nio,org.eclipse.jetty.http.security,org.eclipse.jetty.util.log,org.eclipse.jetty.io.bio,javax.net'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.client.security'/>
      <p n='uses' v='org.eclipse.jetty.client,org.eclipse.jetty.io,org.eclipse.jetty.http.security,org.eclipse.jetty.http,org.eclipse.jetty.util,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.security'/>
      <p n='uses' v='javax.servlet,org.eclipse.jetty.server,org.eclipse.jetty.http.security,org.eclipse.jetty.http,org.eclipse.jetty.server.handler,org.eclipse.jetty.server.session,org.eclipse.jetty.util,javax.servlet.http,org.eclipse.jetty.security.authentication,javax.security.auth,org.eclipse.jetty.util.resource,org.eclipse.jetty.util.log,org.eclipse.jetty.util.component'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.jndi.factories'/>
      <p n='uses' v='org.eclipse.jetty.http.security,javax.naming,javax.naming.spi'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.jndi.java'/>
      <p n='uses' v='javax.naming,org.eclipse.jetty.util.log,org.eclipse.jetty.jndi,javax.naming.spi'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.log.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.nio.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.component'/>
      <p n='uses' v='org.eclipse.jetty.util.log,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.component.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.servlet'/>
      <p n='uses' v='org.eclipse.jetty.servlet,org.eclipse.jetty.plus.annotation'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.jaas.callback'/>
      <p n='uses' v='javax.security.auth.callback,org.eclipse.jetty.server,org.eclipse.jetty.http.security'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.websocket'/>
      <p n='uses' v='org.eclipse.jetty.io,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.io.nio,javax.servlet.http,org.eclipse.jetty.server,org.eclipse.jetty.http,javax.servlet,org.eclipse.jetty.server.handler'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.xml'/>
      <p n='uses' v='org.eclipse.jetty.util.component,org.eclipse.jetty.util.resource,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.xml.sax,javax.xml.parsers,org.xml.sax.helpers'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server'/>
      <p n='uses' v='org.eclipse.jetty.io,org.eclipse.jetty.util.log,org.eclipse.jetty.util.statistic,org.eclipse.jetty.http,org.eclipse.jetty.util.thread,org.eclipse.jetty.util.component,javax.servlet,org.eclipse.jetty.continuation,org.eclipse.jetty.server.handler,javax.servlet.http,org.eclipse.jetty.util,org.eclipse.jetty.server.ssl,org.eclipse.jetty.server.nio,org.eclipse.jetty.util.resource,org.eclipse.jetty.io.nio,org.eclipse.jetty.server.session,javax.security.auth'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.servlet'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.io,org.eclipse.jetty.http,org.eclipse.jetty.server.nio,org.eclipse.jetty.server.handler,org.eclipse.jetty.util.resource,javax.servlet,org.eclipse.jetty.server.ssl,org.eclipse.jetty.util.log,javax.servlet.http,org.eclipse.jetty.util,org.eclipse.jetty.servlet.api,org.eclipse.jetty.util.component,org.eclipse.jetty.security,org.eclipse.jetty.server.session,org.eclipse.jetty.continuation'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.thread.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.nio'/>
      <p n='uses' v='org.eclipse.jetty.io.nio,org.eclipse.jetty.server,org.eclipse.jetty.io,org.eclipse.jetty.util.log,org.eclipse.jetty.http,org.eclipse.jetty.util.thread,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.jndi'/>
      <p n='uses' v='javax.naming,org.eclipse.jetty.util.log,org.eclipse.jetty.jndi'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.jndi.local'/>
      <p n='uses' v='javax.naming,org.eclipse.jetty.jndi'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.plus.security'/>
      <p n='uses' v='org.eclipse.jetty.server,javax.naming,org.eclipse.jetty.security,org.eclipse.jetty.http.security,javax.sql,org.eclipse.jetty.plus.jndi,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.client.webdav'/>
      <p n='uses' v='org.eclipse.jetty.client,org.eclipse.jetty.io,org.eclipse.jetty.util.log,org.eclipse.jetty.client.security,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.io.nio'/>
      <p n='uses' v='org.eclipse.jetty.io,org.eclipse.jetty.util.log,org.eclipse.jetty.util.thread,org.eclipse.jetty.util.component,javax.net.ssl'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.statistic'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.annotations'/>
      <p n='uses' v='org.eclipse.jetty.webapp,org.eclipse.jetty.servlet,javax.servlet,org.eclipse.jetty.util.resource,org.eclipse.jetty.util.log,org.eclipse.jetty.util,org.eclipse.jetty.security,org.eclipse.jetty.plus.annotation,org.eclipse.jetty.server,javax.naming,org.eclipse.jetty.plus.jndi,javax.servlet.http'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.servlet.api'/>
      <p n='uses' v='org.eclipse.jetty.server'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.rewrite.handler'/>
      <p n='uses' v='javax.servlet.http,org.eclipse.jetty.server,org.eclipse.jetty.http,org.eclipse.jetty.util,javax.servlet,org.eclipse.jetty.server.handler,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.session.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.security.jaspi'/>
      <p n='uses' v='javax.servlet,org.eclipse.jetty.server,org.eclipse.jetty.security,org.eclipse.jetty.security.authentication,javax.security.auth,javax.security.auth.callback,org.eclipse.jetty.util.log,org.eclipse.jetty.http.security,org.eclipse.jetty.security.jaspi.callback'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.server.jmx'/>
      <p n='uses' v='org.eclipse.jetty.server,org.eclipse.jetty.server.handler,org.eclipse.jetty.jmx'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.http.security'/>
      <p n='uses' v='org.eclipse.jetty.util.log,org.eclipse.jetty.util'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.jmx'/>
      <p n='uses' v='javax.management.remote,org.eclipse.jetty.util.thread,javax.management,org.eclipse.jetty.util.component,org.eclipse.jetty.util.log,org.eclipse.jetty.util,javax.management.modelmbean'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.log'/>
      <p n='uses' v='org.eclipse.jetty.util,org.slf4j'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jetty.util.ajax'/>
      <p n='uses' v='org.eclipse.jetty.util,org.eclipse.jetty.util.log'/>
      <p n='version' t='version' v='7.2.0.v20101020'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.modelmbean
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.remote
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.callback
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.login
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.cert)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.cert
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.sasl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.sasl
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.3.0)(!(version&gt;=2.6.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.3.0,2.6.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.3.0)(!(version&gt;=2.6.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.3.0,2.6.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=1.0.4
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.ajp)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.ajp ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.annotations)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.annotations ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.client)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.client ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.client.security)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.client.security ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.client.webdav)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.client.webdav ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.continuation)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.continuation ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.deploy)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.deploy ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.deploy.bindings)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.deploy.bindings ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.deploy.graph)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.deploy.graph ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.deploy.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.deploy.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.deploy.providers)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.deploy.providers ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.deploy.util)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.deploy.util ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.http)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.http ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.http.security)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.http.security ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.io)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.io ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.io.bio)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.io.bio ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.io.nio)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.io.nio ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.jndi)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.jndi ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.jndi.factories)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.jndi.factories ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.jndi.java)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.jndi.java ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.jndi.local)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.jndi.local ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.jsp)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.jsp ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.annotation)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.annotation ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.jaas)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.jaas ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.jaas.callback)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.jaas.callback ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.jaas.spi)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.jaas.spi ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.jndi)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.jndi ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.security)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.security ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.servlet)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.servlet ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.plus.webapp)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.plus.webapp ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.rewrite.handler)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.rewrite.handler ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.security)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.security ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.security.authentication)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.security.authentication ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.security.jaspi)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.security.jaspi ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.security.jaspi.callback)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.security.jaspi.callback ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.security.jaspi.modules)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.security.jaspi.modules ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.bio)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.bio ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.handler)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.handler ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.handler.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.handler.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.nio)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.nio ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.nio.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.nio.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.session)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.session ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.session.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.session.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.ssl)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.server.ssl ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.servlet)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.servlet ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.servlet.api)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.servlet.api ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.servlet.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.servlet.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.servlets)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.servlets ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.servlets.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.servlets.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.ajax)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.ajax ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.component)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.component ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.component.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.component.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.log)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.log ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.log.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.log.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.resource)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.resource ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.statistic)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.statistic ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.thread)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.thread ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.thread.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.util.thread.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.webapp)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.webapp ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.webapp.jmx)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.webapp.jmx ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.websocket)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.websocket ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.xml)(version&gt;=7.1.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jetty.xml ;version=[7.1.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mortbay.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mortbay.log
    </require>
    <require extend='false' filter='(&amp;(package=org.mortbay.util.ajax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mortbay.util.ajax
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.web.jsp)(version&gt;=0.8.1))' multiple='false' name='package' optional='true'>
      Import package org.ops4j.pax.web.jsp ;version=0.8.1
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.web.service)(version&gt;=0.8.1))' multiple='false' name='package' optional='false'>
      Import package org.ops4j.pax.web.service ;version=0.8.1
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.http ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.4.3))' multiple='false' name='package' optional='true'>
      Import package org.slf4j ;version=1.4.3
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.ops4j.pax.web.pax-web-jsp/0.8.1' presentationname='OPS4J Pax Web - Jsp Support' symbolicname='org.ops4j.pax.web.pax-web-jsp' uri='pax-web-jsp-0.8.1.jar' version='0.8.1'>
    <description>
      Pax Web Jsp Support via Tomcat Jasper 2.    Detailed information
       to be found at http://wiki.ops4j.org/confluence/x/CgNN.
    </description>
    <size>
      2170895
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OPS4J Pax Web - Jsp Support'/>
      <p n='symbolicname' v='org.ops4j.pax.web.pax-web-jsp'/>
      <p n='version' t='version' v='0.8.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.web.jsp'/>
      <p n='uses' v='javax.servlet,org.apache.commons.logging,org.osgi.framework'/>
      <p n='version' t='version' v='0.8.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.el'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.el,javax.servlet.jsp.el,javax.servlet.jsp.tagext'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.el'/>
      <p n='uses' v='javax.servlet,javax.servlet.jsp,javax.servlet.http,javax.el'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.resources'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.tagext'/>
      <p n='uses' v='javax.servlet.jsp'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.compiler'/>
      <p n='uses' v='org.apache.tools.ant,org.apache.juli.logging,org.apache.tools.ant.taskdefs,org.apache.tools.ant.types,javax.servlet.jsp.tagext,org.xml.sax,javax.el,javax.servlet,org.xml.sax.ext,javax.xml.parsers,org.xml.sax.helpers,javax.servlet.jsp,org.apache.jasper.el,javax.servlet.jsp.el,org.apache.el'/>
      <p n='version' t='version' v='6.0.18'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.el'/>
      <p n='uses' v='javax.el,javax.servlet.jsp.el'/>
      <p n='version' t='version' v='6.0.18'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.el'/>
      <p n='uses' v='javax.el'/>
      <p n='version' t='version' v='6.0.18'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.el ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.el ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.resources)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.resources ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.tagext ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.resources)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.resources ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=1.0.4
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.juli.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.taskdefs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.util
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.core.resources)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.core.resources
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.core.runtime)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.core.runtime
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jdt.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.core.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jdt.core.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.compiler.apt.dispatch)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jdt.internal.compiler.apt.dispatch
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jdt.internal.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.core.builder)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jdt.internal.core.builder
    </require>
    <require extend='false' filter='(&amp;(package=org.ops4j.pax.web.jsp)(version&gt;=0.8.1))' multiple='false' name='package' optional='false'>
      Import package org.ops4j.pax.web.jsp ;version=0.8.1
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
</repository>